[{"C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\index.js":"1","C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\App.js":"2","C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\Header.js":"3","C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\ContactList.js":"4","C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\AddContact.js":"5","C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\ContactCard.js":"6","C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\ContactDetail.js":"7","C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\EditContact.js":"8","C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\api\\contacts.js":"9","C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\context\\ContactsCrudContext.js":"10"},{"size":218,"mtime":1677677987591,"results":"11","hashOfConfig":"12"},{"size":1066,"mtime":1677677987524,"results":"13","hashOfConfig":"12"},{"size":244,"mtime":1677607291643,"results":"14","hashOfConfig":"12"},{"size":1452,"mtime":1677677987528,"results":"15","hashOfConfig":"12"},{"size":1760,"mtime":1677680663472,"results":"16","hashOfConfig":"12"},{"size":1222,"mtime":1677680844732,"results":"17","hashOfConfig":"12"},{"size":851,"mtime":1677680859824,"results":"18","hashOfConfig":"12"},{"size":1663,"mtime":1677677987573,"results":"19","hashOfConfig":"12"},{"size":104,"mtime":1677677987521,"results":"20","hashOfConfig":"12"},{"size":2292,"mtime":1677677987581,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ubij4h",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"24"},"C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\index.js",[],["45","46"],"C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\App.js",["47","48","49"],"import React, { useState, useEffect } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport \"./App.css\";\r\nimport Header from \"./Header\";\r\nimport AddContact from \"./AddContact\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nfunction App() {\r\n  const LOCAL_STORAGE_KEY = \"contacts\";\r\n  const [contacts, setContacts] = useState(\r\n    JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY)) ?? []\r\n  );\r\n\r\n  const addContactHandler = (contact) => {\r\n    console.log(contact);\r\n    setContacts([...contacts, { id: uuid(), ...contact }]);\r\n  };\r\n\r\n  const removeContactHandler = (id) => {\r\n    const newContactList = contacts.filter((contact) => {\r\n      return contact.id !== id;\r\n    });\r\n\r\n    setContacts(newContactList);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   const retriveContacts = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\r\n  //   if (retriveContacts) setContacts(retriveContacts);\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  return (\r\n    <div className=\"ui container\">\r\n      <Header />\r\n      <AddContact addContactHandler={addContactHandler} />\r\n      <ContactList contacts={contacts} getContactId={removeContactHandler} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\Header.js",[],"C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\ContactList.js",[],"C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\AddContact.js",["50"],"C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\ContactCard.js",["51"],"C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\ContactDetail.js",["52"],"C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\components\\EditContact.js",[],"C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\api\\contacts.js",[],"C:\\Users\\sunilkumarc\\Documents\\Code\\React\\React_Tutorial_Contact_Manager_App\\client\\src\\context\\ContactsCrudContext.js",["53"],"import { createContext, useContext, useState } from \"react\";\r\nimport api from \"../api/contacts\";\r\nimport { uuid } from \"uuidv4\";\r\n\r\nconst contactsCrudContext = createContext();\r\n\r\nexport function ContactsCrudContextProvider({children}) {\r\n    const [contacts, setContacts] = useState([]);\r\n    const [contact, setContact] = useState([]);\r\n    const [text, setText] = useState(\"\");\r\n    const [searchResults, setSearchResults] = useState([]);\r\n\r\n    //RetrieveContacts\r\n  const retrieveContacts = async () => {\r\n    const response = await api.get(\"/contacts\");\r\n    if (response.data) {\r\n      setContacts(response.data);\r\n    } \r\n  };\r\n\r\n  const addContactHandler = async (contact) => {\r\n    const request = {\r\n      id: uuid(),\r\n      ...contact,\r\n    };\r\n    const response = await api.post(\"/contacts\", request);\r\n    setContacts([...contacts, response.data]);\r\n  };\r\n\r\n  const removeContactHandler = async (id) => {\r\n    await api.delete(`/contacts/${id}`);\r\n    const newContactList = contacts.filter((contact) => {\r\n      return contact.id !== id;\r\n    });\r\n\r\n    setContacts(newContactList);\r\n  };\r\n\r\n  const updateContactHandler = async (contact) => {\r\n    const response = await api.put(`/contacts/${contact.id}`, contact);\r\n    const { id } = response.data;\r\n    setContacts(\r\n      contacts.map((contact) => {\r\n        return contact.id === id ? { ...response.data } : contact;\r\n      })\r\n    );\r\n  };\r\n\r\n  const searchHandler = (searchTerm) => {\r\n    setText(searchTerm);\r\n    if (searchTerm !== \"\") {\r\n      const newContactList = contacts.filter((contact) => {\r\n        console.log(contact);\r\n        return Object.values(contact)\r\n          .join(\" \")\r\n          .toLowerCase()\r\n          .includes(searchTerm.toLowerCase());\r\n      });\r\n      setSearchResults(newContactList);\r\n    }else {\r\n      setSearchResults(contacts);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    contact,\r\n    contacts,\r\n    retrieveContacts,\r\n    addContactHandler,\r\n    removeContactHandler,\r\n    updateContactHandler,\r\n    searchHandler,\r\n    text,\r\n    searchResults\r\n  }\r\n\r\n    return (\r\n        <contactsCrudContext.Provider value={ value }>\r\n            {children}\r\n        </contactsCrudContext.Provider>\r\n    )\r\n}\r\n\r\nexport function useContactsCrud() {\r\n    return useContext(contactsCrudContext)\r\n}",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":13,"column":9,"nodeType":"60","messageId":"61","endLine":13,"endColumn":26},{"ruleId":"58","severity":1,"message":"62","line":36,"column":17,"nodeType":"60","messageId":"61","endLine":36,"endColumn":21},{"ruleId":"58","severity":1,"message":"63","line":36,"column":23,"nodeType":"60","messageId":"61","endLine":36,"endColumn":28},{"ruleId":"58","severity":1,"message":"64","line":7,"column":9,"nodeType":"60","messageId":"61","endLine":7,"endColumn":16},{"ruleId":"58","severity":1,"message":"65","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":12},{"ruleId":"58","severity":1,"message":"65","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":12},{"ruleId":"58","severity":1,"message":"66","line":9,"column":21,"nodeType":"60","messageId":"61","endLine":9,"endColumn":31},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'LOCAL_STORAGE_KEY' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","'email' is assigned a value but never used.","'classes' is assigned a value but never used.","'user' is defined but never used.","'setContact' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]